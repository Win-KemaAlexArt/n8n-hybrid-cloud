// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Supabase –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ n8n
// –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü, —Ñ—É–Ω–∫—Ü–∏–π –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π

const { createClient } = require('@supabase/supabase-js');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Supabase (–∑–∞–ø–æ–ª–Ω–∏—Ç—å –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞)
const SUPABASE_URL = 'https://your-project-id.supabase.co';
const SUPABASE_SERVICE_KEY = 'your-service-role-key';

const supabase = createClient(SUPABASE_URL, SUPABASE_SERVICE_KEY);

async function setupSupabaseAnalytics() {
  console.log('üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Supabase –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –¥–ª—è n8n...');

  try {
    // 1. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –≤–æ—Ä–∫—Ñ–ª–æ—É
    console.log('üìä –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã workflow_analytics...');
    const { error: tableError } = await supabase.rpc('create_workflow_analytics_table');
    
    if (tableError && !tableError.message.includes('already exists')) {
      throw tableError;
    }

    // 2. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–∏—Å—Ç–µ–º—ã
    console.log('üñ•Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã system_metrics...');
    const { error: metricsError } = await supabase.rpc('create_system_metrics_table');
    
    if (metricsError && !metricsError.message.includes('already exists')) {
      throw metricsError;
    }

    // 3. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –ª–æ–≥–æ–≤ –æ—à–∏–±–æ–∫
    console.log('‚ùå –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã error_logs...');
    const { error: logsError } = await supabase.rpc('create_error_logs_table');
    
    if (logsError && !logsError.message.includes('already exists')) {
      throw logsError;
    }

    // 4. –°–æ–∑–¥–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
    console.log('‚ö° –°–æ–∑–¥–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏...');
    await createAnalyticsFunctions();

    // 5. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Real-time –ø–æ–¥–ø–∏—Å–æ–∫
    console.log('üîÑ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Real-time –ø–æ–¥–ø–∏—Å–æ–∫...');
    await setupRealtimeSubscriptions();

    // 6. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    console.log('üß™ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
    await insertTestData();

    console.log('‚úÖ Supabase –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    console.log('üìà –î–æ—Å—Ç—É–ø–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã:');
    console.log(`   - Workflow Analytics: ${SUPABASE_URL}/rest/v1/workflow_analytics`);
    console.log(`   - System Metrics: ${SUPABASE_URL}/rest/v1/system_metrics`);
    console.log(`   - Error Logs: ${SUPABASE_URL}/rest/v1/error_logs`);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Supabase:', error);
    process.exit(1);
  }
}

async function createAnalyticsFunctions() {
  // SQL —Ñ—É–Ω–∫—Ü–∏–∏ –±—É–¥—É—Ç —Å–æ–∑–¥–∞–Ω—ã —á–µ—Ä–µ–∑ Supabase Dashboard –∏–ª–∏ SQL Editor
  const functions = [
    {
      name: 'log_workflow_execution',
      description: '–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤–æ—Ä–∫—Ñ–ª–æ—É'
    },
    {
      name: 'get_workflow_stats',
      description: '–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤–æ—Ä–∫—Ñ–ª–æ—É'
    },
    {
      name: 'get_system_health',
      description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã'
    }
  ];

  console.log('üìù –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤ Supabase SQL Editor:');
  functions.forEach(func => {
    console.log(`   - ${func.name}: ${func.description}`);
  });
}

async function setupRealtimeSubscriptions() {
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
  const subscription = supabase
    .channel('workflow_analytics')
    .on('postgres_changes', 
      { event: 'INSERT', schema: 'public', table: 'workflow_analytics' },
      (payload) => {
        console.log('üìä –ù–æ–≤–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤–æ—Ä–∫—Ñ–ª–æ—É:', payload.new);
      }
    )
    .subscribe();

  console.log('üîÑ Real-time –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞');
}

async function insertTestData() {
  // –í—Å—Ç–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
  const testWorkflows = [
    {
      workflow_name: 'telegram_bot_handler',
      execution_time: new Date().toISOString(),
      duration_ms: 150,
      status: 'completed',
      input_data: { message: 'test message' },
      output_data: { response: 'success' }
    },
    {
      workflow_name: 'webhook_processor',
      execution_time: new Date().toISOString(),
      duration_ms: 89,
      status: 'completed',
      input_data: { webhook_type: 'stripe' },
      output_data: { processed: true }
    }
  ];

  const { error } = await supabase
    .from('workflow_analytics')
    .insert(testWorkflows);

  if (error) {
    console.log('‚ö†Ô∏è –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü');
  } else {
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã');
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ n8n
module.exports = {
  setupSupabaseAnalytics,
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑ n8n –≤–æ—Ä–∫—Ñ–ª–æ—É
  logWorkflowExecution: async (workflowData) => {
    const { error } = await supabase
      .from('workflow_analytics')
      .insert({
        workflow_name: workflowData.name,
        execution_time: new Date().toISOString(),
        duration_ms: workflowData.duration,
        status: workflowData.status,
        input_data: workflowData.input,
        output_data: workflowData.output,
        error_message: workflowData.error
      });

    if (error) {
      console.error('–û—à–∏–±–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤ Supabase:', error);
    }
  },

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  getWorkflowStats: async (timeframe = '24h') => {
    const { data, error } = await supabase
      .from('workflow_analytics')
      .select('*')
      .gte('execution_time', new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString());

    return { data, error };
  }
};

// –ó–∞–ø—É—Å–∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  setupSupabaseAnalytics();
}
